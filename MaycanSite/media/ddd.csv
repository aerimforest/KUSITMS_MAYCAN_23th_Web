index,name,date,word
0,나동민,오후 4:12,.
1,pιт a pιnĸy,오후 4:13,톡게시판 '투표': 뭐하까.ᐟ
2,엄세리,오후 4:21,"1. 자기소개, PM 정하기, PM이 카톡방 생성"
3,엄세리,오후 4:21,2. 모일 시간 정하기
4,엄세리,오후 4:21,"3. 역할분배(트렌드조사/콜라보케이스조사/기업조사 , 백/프론트/데분)"
5,엄세리,오후 4:21,4. 그외 과제 추가 의논
6,엄세리,오후 4:21,5. 5시30분까지 자유롭게 회의 후 각 조별로 순서대로 기프PM과 미팅 요일 발표
7,엄세리,오후 4:24,샵검색: #사다리게임
8,이승민,오후 4:27,사진
9,나동민,오후 4:27,사진
10,김예림,오후 4:27,사진
11,엄세리,오후 4:28,사진
12,pιт a pιnĸy,오후 4:28,사진
13,pιт a pιnĸy,오후 4:28,월요일은 녹강이라 실질적으론 공강이에요.ᐟ
14,박재은,오후 4:29,월화 8시 이후
15,박재은,오후 4:29,수 5시 이후
16,박재은,오후 4:29,목금 오후부터 계속
17,박재은,오후 4:29,일요일 오후
18,pιт a pιnĸy,오후 4:38,사진
19,나동민,오후 5:04,파일: SQLD_예상문제_해답.pdf
20,나동민,오후 5:38,사진
21,나동민,오후 5:38,파일이름 그냥 그대로 올라갑니다!
22,엄세리,오후 5:39,"오옹 확인해주셔서 감사합니다,,`!~!"
23,이승민,오후 5:41,수고하셨습니다!
24,김예림,오후 5:41,"감사합니다!!! 파일은 그냥 jpg, pdf 이렇게 형식으로 구분해도 될 것 같네요!"
25,김예림,오후 5:41,목요일 이외에 가능한 시간은 제가 시간표 취합해서 오늘안에 투표 올릴게요!!
26,나동민,오후 5:44,수고하셨습니다~
27,엄세리,오후 5:58,사진
28,엄세리,오후 5:59,"오늘꺼 대충,,,적어보았습니다,,!!"
29,김예림,오후 6:05,감사합니다~~!!
30,김예림,오후 6:19,톡게시판 '투표': 추가 회의 시간(이번주)
31,김예림,오후 6:19,우선 이번주만 편하신 시간 투표해주시면 감사하겠습니다!
32,나동민,오후 7:09,감사합니다~
33,김예림,오후 12:25,화요일이 가장 많이 나와서 그런데 혹시 동민님은 화요일 저녁에 아예 시간 안되시는건가요??
34,나동민,오후 12:32,아얘 안되는건 아닌데
35,나동민,오후 12:32,7시에 다른 회의가있어서
36,나동민,오후 12:32,애매해서 투표 안했어요
37,나동민,오후 12:33,아니면 화요일에 하고계시면 끝나는대로 제가 들어갈게요
38,김예림,오후 12:38,아하 넵 그럼 혹시 화요일 9시는 다들 어떠신가요??
39,나동민,오후 12:42,전 괜찮습니다
40,나동민,오후 12:43,그리고 굳이 화요일이나 목요일 아니어도 의논할거 있으신분들은 말해주시면 바로 들어가겠습니다!
41,이승민,오후 12:47,괜찮습니당
42,박재은,오후 12:47,저도 좋아요!
43,엄세리,오후 12:52,네네!! 좋습니다!
44,김예림,오후 1:57,수현님도 괜찮으시면 화요일 9시에 제가 링크 만들겠습니다!
45,pιт a pιnĸy,오후 1:21,네 저도 좋아요.ᐟ
46,나동민,오후 5:43,파일: Sample.pptx
47,나동민,오후 5:43,저번 회의에서 회의했던거 토대로 어떻게 만들지 에관한 샘플입니다.
48,나동민,오후 5:43,어차피 다 고쳐야하겠지만 일단 이런건 어떨까 하는거니까 시간나실때 한번씩 봐주시면 감사하겠습니다!
49,이승민,오후 5:57,오 되게 잘 하셨어요!
50,이승민,오후 5:57,이모티콘
51,김예림,오후 5:59,와 너무 감사합니다!!
52,엄세리,오후 6:05,"헉 대박... 감사합니다ㅜㅜ!! 오늘 이거 바탕으로 세부 내용들 쭉쭉 채우면 되겠어요,,☆"
53,박재은,오후 6:09,헐...너무 잘해주셨어요..!!!
54,pιт a pιnĸy,오후 6:46,헉 진짜 감사합니다......ᐟ.ᐟ.ᐟ
55,pιт a pιnĸy,오후 6:59,저희 오늘 7시에 회의 맞죠?
56,pιт a pιnĸy,오후 6:59,앗 아니 9시요
57,나동민,오후 6:59,넵
58,김예림,오후 8:48,https://sookmyung-ac-kr.zoom.us/j/81115326921?pwd=MEg5bkl0OHMra21NSU1iM2dNRXAwUT09
59,김예림,오후 8:48,이따 여기로 들어오시면 됩니다~!
60,pιт a pιnĸy,오후 8:49,이모티콘
61,pιт a pιnĸy,오후 8:59,저 들어가게 해줏세여..
62,김예림,오후 8:59,앗 넵!!
63,pιт a pιnĸy,오후 9:00,꺅 감사해요!
64,엄세리,오후 9:19,사진
65,김예림,오후 9:20,aerimforest98@gmail.com
66,엄세리,오후 9:20,사진
67,나동민,오후 9:20,skehdxhd@gachon.ac.kr
68,박재은,오후 9:20,j936596@sookmyung.ac.kr
69,이승민,오후 9:20,tmdalsdl4370@yonsei.ac.kr
70,엄세리,오후 9:21,seri3234@gmail.com
71,나동민,오후 9:22,파일이름.파일형식
72,pιт a pιnĸy,오후 9:34,Soohyun-CHOI
73,나동민,오후 9:34,https://github.com/skehdxhd96
74,박재은,오후 9:50,https://github.com/jaeeunp
75,엄세리,오후 10:04,사진
76,엄세리,오후 10:04,혹시 이런 형식으로 정리 하는거 어떻게 생각하시나요..!
77,pιт a pιnĸy,오후 10:05,헉 조아요.ᐟ
78,나동민,오후 10:05,근데
79,엄세리,오후 10:05,네네!
80,나동민,오후 10:05,저희 사진찍는거
81,엄세리,오후 10:05,아맞다
82,나동민,오후 10:05,다음에해도되나요?
83,pιт a pιnĸy,오후 10:05,아 마따
84,엄세리,오후 10:05,"네 정기회의때만 하면 되지 않을까요호,,ㅎㅎ"
85,김예림,오후 10:05,주에 한번만 보내면 될 것 같아서
86,pιт a pιnĸy,오후 10:05,원래 목요일이니까 목요일에 해도 되지 않을까유
87,pιт a pιnĸy,오후 10:05,네네
88,나동민,오후 10:05,아
89,김예림,오후 10:05,목요일에 찍으려고 했어요 ㅎㅎ
90,엄세리,오후 10:05,다행이다
91,나동민,오후 10:05,넵ㅎㅎ
92,김예림,오후 10:05,좋아요!!
93,엄세리,오후 10:07,"근데 사실 막상 고민해서 정리하려고 보면 표 형식에 넣기 애매할 수도 있는데 그럴때는 구냥 편하신대로 하셔도 될 것 같아요,,ㅎㅎ"
94,김예림,오후 10:13,넵!!
95,김예림,오후 10:13,깃헙 아이디 보내주신 분들은 다 초대해드렸습니다~!
96,엄세리,오후 10:39,https://github.com/Umseri
97,김예림,오후 6:42,https://sookmyung-ac-kr.zoom.us/j/84837428828?pwd=bi9Jc1pQdUV5QSs5bk1rSENuUWxCdz09
98,김예림,오후 6:42,이따 여기로 들어오시면 됩니다~!
99,김예림,오후 7:03,https://drive.google.com/drive/u/0/folders/1cpiWu1TXFC1v0AMT9oDlzFss_0E7d75x
100,나동민,오후 7:05,음.. 말씀을 들어보면 머신러닝에서 라벨링이나 데이터를 정제하는 아이디어 같은데..
101,나동민,오후 7:05,제가 머신러닝쪽에는 경험이 거희 전무하지만 저라면 카카오톡에서 추출되는 데이터에서 어떤 정보를 뽑을 수 있는지가 중요할것 같은데...
102,나동민,오후 7:05,1) 학습시킬 데이터 집단으로 잘 아는 사람들의 대화목록을 추출할거고
103,나동민,오후 7:05,2) 거기서 데이터에서 dataframe으로 어떤 정보를 추출할지 아이디어를 내고
104,나동민,오후 7:05,3) dataframe에서 뽑고 싶은 사람이랑 안뽑고 싶은 사람을 라벨링해서
105,나동민,오후 7:05,"4) 학습시키면 될것 같고,,"
106,나동민,오후 7:05,2)에서 추출할 수 있는 정보로
107,나동민,오후 7:05,"말씀하신 파일 타입이나 링크도 있고 자연어 분석으로 하면 단어나 형태소 단위까지 세분화할 수 있을것 같고, 아니면 상대방과 응답 시간 간격도 하나의 컬럼이 될 수 있을것 같아요ㅋ"
108,나동민,오후 7:06,안녕하세요~^^
109,나동민,오후 7:06,요즘 언택 시대에 좋은 주제로 하고 계시네요~
110,나동민,오후 7:06,인터넷에 자료로 별로 없고 해서 개인적으로 생각을 해봤습니다.
111,나동민,오후 7:06,전체적으로 무임 승차에 대한 체킹이 우선적이므로~
112,나동민,오후 7:06,크게 어떤 부류를 정한 후
113,나동민,오후 7:06,세부 항목을 정해서 분석을 하면 좋을 듯 합니다.
114,나동민,오후 7:06,"예를 들면, 과제를 하려면 해야할 일들을 분류하여 카테고리를 만들고"
115,나동민,오후 7:06,그 안에서 처리할 일들을 세부적인 항목으로 만들면 어떨지 생각해 봤어요~
116,나동민,오후 7:06,"리더십, 참여율, 부정적인 영향으로 한다면"
117,나동민,오후 7:06,"어떤 부분이 리더쉽이고,"
118,나동민,오후 7:06,"참여율은 어느 부분에 대한 참여율인지 정하고,"
119,나동민,오후 7:06,부정적인 사항들은 어떤 것인지
120,나동민,오후 7:06,초기 값으로 설정할 부분을 생각해야 할 것 같아요~
121,나동민,오후 7:06,기존 내용에서
122,나동민,오후 7:06,"부정적인 내용에 대한 키워드의 추가,"
123,나동민,오후 7:06,"인사나 불필요한 단어나 문장의 제거,"
124,나동민,오후 7:06,"참여율은 참여한 횟수, 대화의 참여 정도, 파일의 업로드 횟수 등으로 추가 등을 생각해 봤구요~"
125,나동민,오후 7:06,저는 지금 생각하신 것에서 약간 추가해서 생각해볼 것이 무엇인지 생각해 봤는데요~
126,나동민,오후 7:06,톡에 대한 내용에서
127,나동민,오후 7:06,주제에 대해 얘기할 때 학생들이 얘기한 키워드의 대해
128,나동민,오후 7:06,관련도(관련이 어느 정도 되는지 - 쓸데 없는 얘기는 걸러지게) - 주제에 대한 전체 내용에서 나온 키워드에 관련된 정도의 표시
129,나동민,오후 7:06,창의성 - 그 주제에 대해 기존에 없던 새로운 주제나 의견을 얘기를 한 정도의 표시
130,나동민,오후 7:06,등이 있으면 어떨까 생각해 봤어요~~
131,나동민,오후 7:06,깊게 생각할 수가 없어서
132,나동민,오후 7:06,두서 없이 생각을 적어 봤어요~
133,나동민,오후 7:06,모쪼록 힌트가 될 수 있는 글이 됐으면 합니다~^^
134,나동민,오후 7:06,화이팅 하셔서~
135,나동민,오후 7:06,좋은 결과가 있으시길 응원합니다~
136,김예림,오후 8:15,@이승민 승민님 이번주 일요일 오후 1시~3시에 시간 괜찮으신가요??
137,김예림,오후 8:18,사진
138,pιт a pιnĸy,오후 8:20,아 우리 기엽네요
139,김예림,오후 8:20,ㅋㅋㅋㅋㅋ
140,김예림,오후 8:20,이모티콘
141,엄세리,오후 8:20,"ㅋㅋㅋㅋㅋㅋㅋㅋㅋ그러게요,,^__^ㅋㅋㅋㅋ"
142,나동민,오후 8:21,저 너무 자연인상태인데 ㅋㅋㅋㅋ
143,김예림,오후 8:23,ㅋㅋㅋㅋ나연님만 보시니까 괜찮아요 ㅎㅎ
144,김예림,오후 8:38,📌 다음 회의 일정
145,김예림,오후 8:38,- 시간 : 3/28(일) 오후 1시~
146,김예림,오후 8:38,- 내용: 파트별 중간 점검
147,김예림,오후 8:38,- 링크: https://sookmyung-ac-kr.zoom.us/j/88053805734
148,김예림,오후 8:38,📌 파트별 할 일
149,김예림,오후 8:38,"✔️ 데이터(세리, 수현, 승민)"
150,김예림,오후 8:38,- 3/27(토) : 받은 데이터 돌려보기
151,김예림,오후 8:38,"✔️ 백(동민, 예림)"
152,김예림,오후 8:38,- Django 공부
153,김예림,오후 8:38,- 전체적인 틀 구성
154,김예림,오후 8:38,"✔️ 프론트(수현, 재은)"
155,김예림,오후 8:38,- 프로토타입 기반으로 기본 틀 구성
156,김예림,오후 8:38,📌 카톡 대화내용 라벨링
157,김예림,오후 8:38,1. 카톡 대화내용 내보내기
158,김예림,오후 8:38,"2.  tab을 column, enter을 row로 분류"
159,김예림,오후 8:38,3. 칼럼 추가해서 라벨링
160,김예림,오후 8:38,4. csv 파일로 변경 후 늦어도 토요일 오전까지 데이터팀에게 전달
161,김예림,오후 8:38,📌 최종 분류 기준
162,김예림,오후 8:38,https://docs.google.com/spreadsheets/d/1jq469vyt1zcKE321KdNZkUuDVJeCf0IJ/edit#gid=2121480103
163,김예림,오후 8:38,톡게시판 '공지': 📌 다음 회의 일정
164,김예림,오후 8:38,- 시간 : 3/28(일) 오후 1시~
165,김예림,오후 8:38,- 내용: 파트별 중간 점검
166,김예림,오후 8:38,- 링크: https://sookmyung-ac-kr.zoom.us/j/88053805734
167,김예림,오후 8:38,📌 파트별 할 일
168,김예림,오후 8:38,"✔️ 데이터(세리, 수현, 승민)"
169,김예림,오후 8:38,- 3/27(토) : 받은 데이터 돌려보기
170,김예림,오후 8:38,"✔️ 백(동민, 예림)"
171,김예림,오후 8:38,- Django 공부
172,김예림,오후 8:38,- 전체적인 틀 구성
173,김예림,오후 8:38,"✔️ 프론트(수현, 재은)"
174,김예림,오후 8:38,- 프로토타입 기반으로 기본 틀 구성
175,김예림,오후 8:38,📌 카톡 대화내용 라벨링
176,김예림,오후 8:38,1. 카톡 대화내용 내보내기
177,김예림,오후 8:38,"2.  tab을 column, enter을 row로 분류"
178,김예림,오후 8:38,3. 칼럼 추가해서 라벨링
179,김예림,오후 8:38,4. csv 파일로 변경 후 늦어도 토요일 오전까지 데이터팀에게 전달
180,김예림,오후 8:38,📌 최종 분류 기준
181,김예림,오후 8:38,https://docs.google.com/spreadsheets/d/1jq469vyt1zcKE321KdNZkUuDVJeCf0IJ/edit#gid=2121480103
182,나동민,오후 9:09,csv파일
183,나동민,오후 9:09,날짜 이름 내용 라벨링
184,나동민,오후 9:09,이런 형식으로 보내드리면 되나요??
185,이승민,오후 9:10,넵 괜찮습니다!
186,pιт a pιnĸy,오후 9:27,칼럼명 말씀하시는 거죠? 전 괜찮은 거 같아유
187,나동민,오후 7:57,저희 라벨링
188,나동민,오후 7:57,참여성 창의성 성실성에 속하지 않으면
189,나동민,오후 7:58,전부다 기타로 빼면 되나요??
190,나동민,오후 7:59,그냥 감탄사나 사적인 말같은거요
191,pιт a pιnĸy,오후 8:08,네네.ᐟ
192,pιт a pιnĸy,오전 11:46,혹쉬 카카오톡 csv 파일 만드신 분 있으실까유?
193,나동민,오전 11:47,아 저
194,나동민,오전 11:48,카페가는중인데
195,나동민,오전 11:48,도착해서 보내드릴게요
196,나동민,오전 11:48,까먹었어요..
197,나동민,오전 11:48,보낸줄 알았습니다..
198,pιт a pιnĸy,오전 11:49,앗 아니에유 천천히 보내주세요ㅎㅎㅎ
199,나동민,오전 11:57,넵 가서 확인한번만 하고 바로보내겠습니다
200,pιт a pιnĸy,오후 1:29,혹쉬혹쉬 동민님 외에 카톡 파일 만드신 분 계신가요?
201,pιт a pιnĸy,오후 1:29,이모티콘
202,김예림,오후 1:32,저도 보내드릴 수 있을 것 같은데 최대한 빨리 해서 보내드리겠습니다!!!
203,pιт a pιnĸy,오후 1:33,넵넵 시간 괜찮으실 때 여유롭게 보내주세요ㅎㅎ
204,엄세리,오후 12:56,오늘 1시맞나요???!
205,김예림,오후 12:57,넵!!
206,김예림,오후 12:57,https://sookmyung-ac-kr.zoom.us/j/88053805734
207,김예림,오후 1:03,@엄세리 세리님 들어와주세요~!!
208,엄세리,오후 1:03,넹 인터넷 연결이 잘 안되서
209,엄세리,오후 1:03,지금 들어갈께요~
210,이승민,오후 1:09,사진
211,김예림,오후 1:37,📣 다음 회의 일정
212,김예림,오후 1:37,- 시간: 3/30(화) 오후 9시~(30분)
213,김예림,오후 1:37,- 내용: 최대한 완성 후 파트별 중간 점검
214,김예림,오후 1:37,- 링크: https://sookmyung-ac-kr.zoom.us/j/89300947970
215,김예림,오후 1:37,톡게시판 '공지': 📣 다음 회의 일정
216,김예림,오후 1:37,- 시간: 3/30(화) 오후 9시~(30분)
217,김예림,오후 1:37,- 내용: 최대한 완성 후 파트별 중간 점검
218,김예림,오후 1:37,- 링크: https://sookmyung-ac-kr.zoom.us/j/89300947970
219,pιт a pιnĸy,오후 1:38,이모티콘
220,엄세리,오후 2:48,감사합니당~!
221,김예림,오후 9:01,https://sookmyung-ac-kr.zoom.us/j/89300947970
222,김예림,오후 9:02,들어와주세요~~!!
223,엄세리,오후 9:11,사진
224,엄세리,오후 9:16,사진
225,pιт a pιnĸy,오후 9:46,사이트 예쁘게 잘 만들어 주셔서 진짜 감사해요.ᐟ.ᐟ 짧은 시간에 정말정말 고생하셨습니다ㅠㅠ🤍
226,나동민,오후 9:51,저희는 데이터가 더신기해서..
227,나동민,오후 9:51,수고하셨습니다!!
228,김예림,오후 9:52,저도요...데이터 코드 다 짜셨다고해서 완전 놀랬어요 다들 대단하십니다🥺
229,엄세리,오후 10:11,서로 신기...ㅋㅋㅋㅋㅋ
230,엄세리,오후 10:12,삭제된 메시지입니다.
231,엄세리,오후 10:13,사진
232,엄세리,오후 10:13,<성실도 비율>
233,엄세리,오후 10:13,사진
234,엄세리,오후 10:13,<참여성 비율>
235,엄세리,오후 10:14,사진
236,엄세리,오후 10:14,<창의성 비율>
237,엄세리,오후 10:14,사진
238,엄세리,오후 10:14,<기타비율>
239,엄세리,오후 10:14,사진
240,엄세리,오후 10:15,<전체 개인 비율>
241,엄세리,오후 10:15,이렇게 나옵니다!
242,엄세리,오후 10:45,혹시 저희 내일 6시 반 가능하실까요..?!
243,엄세리,오후 10:45,수업이 6시까지라 촉박해서
244,pιт a pιnĸy,오후 10:51,저는 괜찮아요!
245,박재은,오후 10:51,저도 괜찮습니다!
246,김예림,오후 10:52,저도 괜찮아요!! 세리님이 보내주신것도 다 확인했습니다!
247,나동민,오후 11:14,저도 괜찮아요~
248,이승민,오후 11:15,저도 괜찮습니다ㅠ
249,이승민,오후 11:15,!
250,나동민,오후 4:45,저 죄송한데
251,나동민,오후 4:45,지금 카페에 와있는데 이어폰 마이크가 고장난거같아서
252,나동민,오후 4:46,오늘 채팅으로 말하겠습니다..
253,엄세리,오후 4:47,넵!
254,pιт a pιnĸy,오후 4:50,넵넵 괜찮습니다.ᐟ 미리 말씀해주셔서 감사해용
255,김예림,오후 6:28,https://sookmyung-ac-kr.zoom.us/j/89321975858?pwd=T1Jic1JHVFdJbThkZXFrVzFWM3FmZz09
256,김예림,오후 6:28,여기로 들어오시면 됩니다!!
257,김예림,오후 6:32,@나동민 @pιт a pιnĸy 들어와주세요~~
258,pιт a pιnĸy,오후 6:37,import pandas as pd
259,pιт a pιnĸy,오후 6:37,def check_line(line):
260,pιт a pιnĸy,오후 6:37,"str1, str2, str3 = """", """", """""
261,pιт a pιnĸy,오후 6:37,for pass_word in pass_words:
262,pιт a pιnĸy,오후 6:37,if pass_word in line:
263,pιт a pιnĸy,오후 6:37,"str1 += ""pass"""
264,pιт a pιnĸy,오후 6:37,"for idx, l in enumerate(line):"
265,pιт a pιnĸy,오후 6:37,start = idx
266,pιт a pιnĸy,오후 6:37,end = idx + 9
267,pιт a pιnĸy,오후 6:37,"if l == ""["" and line[idx + 1] == ""오"" and line[idx + 3] == "" "":"
268,pιт a pιnĸy,오후 6:37,try:
269,pιт a pιnĸy,오후 6:37,check_num = int(line[idx + 5])
270,pιт a pιnĸy,오후 6:37,except ValueError:
271,pιт a pιnĸy,오후 6:37,end -= 1
272,pιт a pιnĸy,오후 6:37,str1 += line[1:start - 2]
273,pιт a pιnĸy,오후 6:37,str2 += line[start + 1: end]
274,pιт a pιnĸy,오후 6:37,str3 += line[end + 1:-1]
275,pιт a pιnĸy,오후 6:37,"return str1, str2, str3"
276,pιт a pιnĸy,오후 6:37,def create_list(lines):
277,pιт a pιnĸy,오후 6:37,"name_list, date_list, word_list = [], [], []"
278,pιт a pιnĸy,오후 6:37,"for idx, line in enumerate(lines):"
279,pιт a pιnĸy,오후 6:37,"name, date, word = check_line(line)"
280,pιт a pιnĸy,오후 6:37,if not name:
281,pιт a pιnĸy,오후 6:37,word += line[:-1]
282,pιт a pιnĸy,오후 6:37,name_list.append(name.strip())
283,pιт a pιnĸy,오후 6:37,date_list.append(date.strip())
284,pιт a pιnĸy,오후 6:37,word_list.append(word.strip())
285,pιт a pιnĸy,오후 6:37,"return name_list, date_list, word_list"
286,pιт a pιnĸy,오후 6:37,"def create_df(list1, list2, list3):"
287,pιт a pιnĸy,오후 6:37,"df = pd.DataFrame({""name"": list1, ""date"": list2, ""word"": list3})"
288,pιт a pιnĸy,오후 6:37,"df.drop(df.loc[df[""word""] == """"].index, inplace=True)"
289,pιт a pιnĸy,오후 6:37,"df.replace("""", None, inplace=True)"
290,pιт a pιnĸy,오후 6:37,"df[""index""] = [i for i in range(len(df))]"
291,pιт a pιnĸy,오후 6:37,"result = df.set_index(""index"", drop=True)"
292,pιт a pιnĸy,오후 6:37,return result
293,pιт a pιnĸy,오후 6:37,def main(filename):
294,pιт a pιnĸy,오후 6:37,"open_txt = open(f""data/{filename}.txt"", ""r"")"
295,pιт a pιnĸy,오후 6:37,lines = open_txt.readlines()
296,pιт a pιnĸy,오후 6:37,"names, dates, words = create_list(lines)"
297,pιт a pιnĸy,오후 6:37,"df = create_df(names, dates, words)"
298,pιт a pιnĸy,오후 6:37,# {filename} 앞까지 로컬에 맞게 저장할 경로 입력
299,pιт a pιnĸy,오후 6:37,"df.to_csv(f""/Users/soohyun-choi/Desktop/dev/kusitms_kakao/data/{filename}.csv"")"
300,pιт a pιnĸy,오후 6:37,"# ""kakao"" 자리에 txt 파일 확장자명 제외한 이름을 str 형태로 입력"
301,pιт a pιnĸy,오후 6:37,"main(""kakao"")"
302,pιт a pιnĸy,오후 6:48,value
303,엄세리,오후 6:48,0 참여성
304,엄세리,오후 6:48,1 창의성
305,엄세리,오후 6:48,2 기타
306,pιт a pιnĸy,오후 7:24,"엇 여러분 저 방금 데이터 팀이랑 이야기하다가 생각이 난 건데, 카카오톡 이름이랑 로그인된 유저이름이랑 다를 수도 있으니 카카오톡 대화내용에서 현재 로그인된 유저를 구분하려면 유저가 직접 웹에서 카카오톡 이름을 입력하는 과정이 필요할까요?"
307,김예림,오후 7:26,아 저도 그 부분 말씀드리려고 했는데 카톡에 본인 이름으로 하지 않은 분들도 많이 계시니까 카톡에서 설정한 이름도 입력 받아야 할 것 같아요!
308,엄세리,오후 7:27,저도 혹시모르니까 직접 입력하는 과정도 넣는것도 괜찮을꺼 같습니당!!
309,김예림,오후 7:27,넵넵 그건 프로필 등록할때 같이 입력하도록 추가해놓을게요!
310,엄세리,오후 7:27,넹!
311,pιт a pιnĸy,오후 7:30,네네 감사합니다!
312,pιт a pιnĸy,오후 7:30,이모티콘
313,엄세리,오후 9:17,"혹시 코드 JSON 형식으로 내일 보내드려도 될까용,,, 제가 지금 코딩이 막혀서 ,,,후후,,,,"
314,나동민,오후 9:18,네 천천히 하세요~
315,엄세리,오후 9:20,감사합니다ㅠㅠ
316,pιт a pιnĸy,오후 1:19,저희 코드 전부 완성했어요! 테스트만 몇 번 더 돌려보고 보내드리겠숨미다
317,김예림,오후 1:20,넵 감사합니다!!
318,pιт a pιnĸy,오후 1:20,그리고 저희가 원래 파일을
319,pιт a pιnĸy,오후 1:20,1. txt를 csv로 변환하는 py
320,pιт a pιnĸy,오후 1:20,2. 머신러닝 돌리는 py
321,pιт a pιnĸy,오후 1:20,3. 예측값으로 결과 비율+기여도 뽑는 py
322,pιт a pιnĸy,오후 1:20,4. 워드클라우드 만드는 py
323,pιт a pιnĸy,오후 1:21,"이렇게 4개로 나눠서 만들었는데, 지금 total.py를 새로 만들어서 변수 같은 거 통일해서 합쳐뒀어요!"
324,pιт a pιnĸy,오후 1:22,나중에 코드는 혹쉬 모르니까 저 나눠진 4개에 total까지 합쳐서 5개로 보내드릴게유! 옮기실 때는 total만 넣어줏세요ㅎㅎㅎ
325,김예림,오후 1:43,넵 감사합니다!!
326,pιт a pιnĸy,오후 5:46,import os
327,pιт a pιnĸy,오후 5:46,import pandas as pd
328,pιт a pιnĸy,오후 5:46,import numpy as np
329,pιт a pιnĸy,오후 5:46,from konlpy.tag import Okt
330,pιт a pιnĸy,오후 5:46,from tensorflow.python.keras.preprocessing.sequence import pad_sequences
331,pιт a pιnĸy,오후 5:46,from tensorflow.python.keras.preprocessing.text import Tokenizer
332,pιт a pιnĸy,오후 5:46,from sklearn.model_selection import train_test_split
333,pιт a pιnĸy,오후 5:46,from sklearn.metrics import accuracy_score
334,pιт a pιnĸy,오후 5:46,from keras.models import Sequential
335,pιт a pιnĸy,오후 5:46,"from keras.layers import Dense, Embedding, LSTM"
336,pιт a pιnĸy,오후 5:46,import json
337,pιт a pιnĸy,오후 5:46,from PIL import Image
338,pιт a pιnĸy,오후 5:46,from collections import Counter
339,pιт a pιnĸy,오후 5:46,"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator"
340,pιт a pιnĸy,오후 5:46,import matplotlib.pyplot as plt
341,pιт a pιnĸy,오후 5:46,"os.environ[""TF_CPP_MIN_LOG_LEVEL""] = ""2"""
342,pιт a pιnĸy,오후 5:46,"# ""kakao"" 자리에 txt 파일 확장자명 제외한 이름을 str 형태로 입력"
343,pιт a pιnĸy,오후 5:46,"FILE_NAME = ""kakao"""
344,pιт a pιnĸy,오후 5:46,"USER_NAME = ""최수현"""
345,pιт a pιnĸy,오후 5:46,# >>> 머신러닝 모델 만들기
346,pιт a pιnĸy,오후 5:46,"data = pd.read_csv(""data/text.csv"", encoding=""cp949"")"
347,pιт a pιnĸy,오후 5:46,"def preprocessing(talk, okt, delete_word):"
348,pιт a pιnĸy,오후 5:46,word_talk = okt.nouns(talk)
349,pιт a pιnĸy,오후 5:46,word_talk = [token for token in word_talk if not token in delete_word]
350,pιт a pιnĸy,오후 5:46,return word_talk
351,pιт a pιnĸy,오후 5:46,def get_nounList(data):
352,pιт a pιnĸy,오후 5:46,"delete_word = [""이"", ""그"", ""데"", ""음"", ""제"", ""의"", ""좀"", ""거""]"
353,pιт a pιnĸy,오후 5:46,okt = Okt()
354,pιт a pιnĸy,오후 5:46,noun_list = []
355,pιт a pιnĸy,오후 5:46,"for d in data[""word""]:"
356,pιт a pιnĸy,오후 5:46,if type(d) == str:
357,pιт a pιnĸy,오후 5:46,"noun_list.append(preprocessing(d, okt, delete_word))"
358,pιт a pιnĸy,오후 5:46,else:
359,pιт a pιnĸy,오후 5:46,noun_list.append([])
360,pιт a pιnĸy,오후 5:46,return noun_list
361,pιт a pιnĸy,오후 5:46,noun_list = get_nounList(data)
362,pιт a pιnĸy,오후 5:46,tokenizer = Tokenizer()
363,pιт a pιnĸy,오후 5:46,tokenizer.fit_on_texts(noun_list)
364,pιт a pιnĸy,오후 5:46,txt_sequences = tokenizer.texts_to_sequences(noun_list)
365,pιт a pιnĸy,오후 5:46,word_vocab = tokenizer.word_index
366,pιт a pιnĸy,오후 5:46,MAX_SEQUENCE_LENGTH = 60
367,pιт a pιnĸy,오후 5:46,"data_X = pad_sequences(txt_sequences, maxlen=MAX_SEQUENCE_LENGTH, padding=""post"")"
368,pιт a pιnĸy,오후 5:46,"data_y = np.array(data[""value""])"
369,pιт a pιnĸy,오후 5:46,"X_train, X_test, y_train, y_test = train_test_split(data_X, data_y, train_size=0.8, random_state=1)"
370,pιт a pιnĸy,오후 5:46,# ****** 모델 구축 ******
371,pιт a pιnĸy,오후 5:46,vocab_size = len(word_vocab) + 1
372,pιт a pιnĸy,오후 5:46,model = Sequential()
373,pιт a pιnĸy,오후 5:46,"model.add(Embedding(vocab_size, 800, input_length=MAX_SEQUENCE_LENGTH))"
374,pιт a pιnĸy,오후 5:46,model.add(LSTM(128))
375,pιт a pιnĸy,오후 5:46,"model.add(Dense(3, activation=""softmax""))"
376,pιт a pιnĸy,오후 5:46,"model.compile(optimizer=""rmsprop"", loss=""sparse_categorical_crossentropy"", metrics=[""accuracy""])"
377,pιт a pιnĸy,오후 5:46,# ****** 모델 학습 ******
378,pιт a pιnĸy,오후 5:46,"model.fit(X_train, y_train, epochs=5, batch_size=120, validation_split=0.2)"
379,pιт a pιnĸy,오후 5:46,# ****** 모델 검증 ******
380,pιт a pιnĸy,오후 5:46,"y_train_predclass = np.argmax(model.predict(X_train), axis=1)"
381,pιт a pιnĸy,오후 5:46,"y_test_predclass = np.argmax(model.predict(X_test), axis=1)"
382,pιт a pιnĸy,오후 5:46,"print(f""Train Accuracy: {round(accuracy_score(y_train, y_train_predclass), 3)}"")"
383,pιт a pιnĸy,오후 5:46,"print(f""Test Accuracy: {round(accuracy_score(y_test, y_test_predclass), 3)}"")"
384,pιт a pιnĸy,오후 5:46,"model.fit(X_test, y_test, epochs=1, batch_size=60)"
385,pιт a pιnĸy,오후 5:46,# >>> csv 파일 만들기
386,pιт a pιnĸy,오후 5:46,def check_line(line):
387,pιт a pιnĸy,오후 5:46,"str1, str2, str3 = """", """", """""
388,pιт a pιnĸy,오후 5:46,for pass_word in pass_words:
389,pιт a pιnĸy,오후 5:46,if pass_word in line:
390,pιт a pιnĸy,오후 5:46,"str1 += ""pass"""
391,pιт a pιnĸy,오후 5:46,"for idx, l in enumerate(line):"
392,pιт a pιnĸy,오후 5:46,start = idx
393,pιт a pιnĸy,오후 5:46,end = idx + 9
394,pιт a pιnĸy,오후 5:46,"if l == ""["" and line[idx + 1] == ""오"" and line[idx + 3] == "" "":"
395,pιт a pιnĸy,오후 5:46,try:
396,pιт a pιnĸy,오후 5:46,check_num = int(line[idx + 5])
397,pιт a pιnĸy,오후 5:46,except ValueError:
398,pιт a pιnĸy,오후 5:46,end -= 1
399,pιт a pιnĸy,오후 5:46,str1 += line[1:start - 2]
400,pιт a pιnĸy,오후 5:46,str2 += line[start + 1: end]
401,pιт a pιnĸy,오후 5:46,str3 += line[end + 1:-1]
402,pιт a pιnĸy,오후 5:46,"return str1, str2, str3"
403,pιт a pιnĸy,오후 5:46,def create_list(lines):
404,pιт a pιnĸy,오후 5:46,"name_list, date_list, word_list = [], [], []"
405,pιт a pιnĸy,오후 5:46,"for idx, line in enumerate(lines):"
406,pιт a pιnĸy,오후 5:46,"name, date, word = check_line(line)"
407,pιт a pιnĸy,오후 5:46,if not name:
408,pιт a pιnĸy,오후 5:46,word += line[:-1]
409,pιт a pιnĸy,오후 5:46,name_list.append(name.strip())
410,pιт a pιnĸy,오후 5:46,date_list.append(date.strip())
411,pιт a pιnĸy,오후 5:46,word_list.append(word.strip())
412,pιт a pιnĸy,오후 5:46,"return name_list, date_list, word_list"
413,pιт a pιnĸy,오후 5:46,"def create_df(list1, list2, list3):"
414,pιт a pιnĸy,오후 5:46,"df = pd.DataFrame({""name"": list1, ""date"": list2, ""word"": list3})"
415,pιт a pιnĸy,오후 5:46,"df.drop(df.loc[df[""word""] == """"].index, inplace=True)"
416,pιт a pιnĸy,오후 5:46,"df.replace("""", None, inplace=True)"
417,pιт a pιnĸy,오후 5:46,"df[""index""] = [i for i in range(len(df))]"
418,pιт a pιnĸy,오후 5:46,"result = df.set_index(""index"", drop=True)"
419,pιт a pιnĸy,오후 5:46,return result
420,pιт a pιnĸy,오후 5:46,def create_csv(filename):
421,pιт a pιnĸy,오후 5:46,"open_txt = open(f""data/{filename}.txt"", ""r"")"
422,pιт a pιnĸy,오후 5:46,lines = open_txt.readlines()
423,pιт a pιnĸy,오후 5:46,"names, dates, words = create_list(lines)"
424,pιт a pιnĸy,오후 5:46,"df = create_df(names, dates, words)"
425,pιт a pιnĸy,오후 5:46,# {filename} 앞까지 로컬에 맞게 저장할 경로 입력
426,pιт a pιnĸy,오후 5:46,"df.to_csv(f""/Users/soohyun-choi/Desktop/dev/kusitms_kakao/data/{filename}.csv"")"
427,pιт a pιnĸy,오후 5:46,# >>> 만든 머신러닝 모델로 새로운 데이터(filename.csv) 예측하기
428,pιт a pιnĸy,오후 5:46,def predict(filename):
429,pιт a pιnĸy,오후 5:46,"df_new = pd.read_csv(f""data/{filename}.csv"")"
430,pιт a pιnĸy,오후 5:46,"X_new = df_new.drop([""index""], axis=1)"
431,pιт a pιnĸy,오후 5:46,new_noun_list = get_nounList(X_new)
432,pιт a pιnĸy,오후 5:46,new_txt_sequences = tokenizer.texts_to_sequences(new_noun_list)
433,pιт a pιnĸy,오후 5:46,"data_new = pad_sequences(new_txt_sequences, maxlen=MAX_SEQUENCE_LENGTH, padding=""post"")"
434,pιт a pιnĸy,오후 5:46,score_array = np.array(model.predict(data_new))
435,pιт a pιnĸy,오후 5:46,"median_array = np.median(score_array, axis=0)"
436,pιт a pιnĸy,오후 5:46,mean_array = score_array.mean(axis=0)
437,pιт a pιnĸy,오후 5:46,value_list = []
438,pιт a pιnĸy,오후 5:46,for score in score_array:
439,pιт a pιnĸy,오후 5:46,if score[1] > mean_array[1]:
440,pιт a pιnĸy,오후 5:46,value_list.append(1)
441,pιт a pιnĸy,오후 5:46,elif score[0] > median_array[0]:
442,pιт a pιnĸy,오후 5:46,value_list.append(0)
443,pιт a pιnĸy,오후 5:46,else:
444,pιт a pιnĸy,오후 5:46,value_list.append(2)
445,pιт a pιnĸy,오후 5:46,"df_value = pd.DataFrame(value_list, columns=[""value""])"
446,pιт a pιnĸy,오후 5:46,"df_result = pd.concat([df_new, df_value], axis=1)"
447,pιт a pιnĸy,오후 5:46,"df_result.to_csv(f""/Users/soohyun-choi/Desktop/dev/kusitms_kakao/data/{filename}_result.csv"")"
448,pιт a pιnĸy,오후 5:46,# >>> 머신러닝 결과값 비율로 나타내기
449,pιт a pιnĸy,오후 5:46,data = pd.read_csv(f'data/{FILE_NAME}_result.csv')
450,pιт a pιnĸy,오후 5:46,"df = data.reindex(columns=['name', 'value', 'date', 'word'])"
451,pιт a pιnĸy,오후 5:46,"df = df.sort_values(by=['name', 'value'])"
452,pιт a pιnĸy,오후 5:46,def get_nameRatio():
453,pιт a pιnĸy,오후 5:46,df_nameRatio = df.groupby('name').size() / df['name'].count() * 100
454,pιт a pιnĸy,오후 5:46,return df_nameRatio
455,pιт a pιnĸy,오후 5:46,def get_valueRatio(idx):
456,pιт a pιnĸy,오후 5:46,"df_value = df[df[""value""].isin([idx])]"
457,pιт a pιnĸy,오후 5:46,"df_valueRatio = df_value.groupby(""name"").size() / df_value[""name""].count() * 100"
458,pιт a pιnĸy,오후 5:46,return df_valueRatio
459,pιт a pιnĸy,오후 5:46,def get_ratioJson(df_ratio):
460,pιт a pιnĸy,오후 5:46,dict_ratio = df_ratio.to_dict()
461,pιт a pιnĸy,오후 5:46,"json_ratio = json.dumps(dict_ratio, ensure_ascii=False)"
462,pιт a pιnĸy,오후 5:46,return json_ratio
463,pιт a pιnĸy,오후 5:46,def get_result(idx):
464,pιт a pιnĸy,오후 5:46,""""""""
465,pιт a pιnĸy,오후 5:46,":param idx: 참여성=0, 창의성=1, 성실성=""name"", 기타=2"
466,pιт a pιnĸy,오후 5:46,:return: type 별 최종 비율을 json 형태로
467,pιт a pιnĸy,오후 5:46,""""""""
468,pιт a pιnĸy,오후 5:46,"if idx == ""name"":"
469,pιт a pιnĸy,오후 5:46,df_ratio = get_nameRatio()
470,pιт a pιnĸy,오후 5:46,else:
471,pιт a pιnĸy,오후 5:46,df_ratio = get_valueRatio(idx)
472,pιт a pιnĸy,오후 5:46,return get_ratioJson(df_ratio)
473,pιт a pιnĸy,오후 5:46,"def get_contribution(name, weight_list):"
474,pιт a pιnĸy,오후 5:46,""""""""
475,pιт a pιnĸy,오후 5:46,:param name: 로그인한 유저의 카카오톡 이름
476,pιт a pιnĸy,오후 5:46,":param weight_list: 가중치 리스트 [참여성, 창의성, 성실성]"
477,pιт a pιnĸy,오후 5:46,":return: 최종 기여도 점수, 기준(모든 사람이 정확히 1/n 만큼 기여했을 때의 값)"
478,pιт a pιnĸy,오후 5:46,""""""""
479,pιт a pιnĸy,오후 5:46,value_list = [get_valueRatio(idx)[name] for idx in range(2)]
480,pιт a pιnĸy,오후 5:46,dict_name = get_nameRatio()
481,pιт a pιnĸy,오후 5:46,value_list.append(dict_name[name])
482,pιт a pιnĸy,오후 5:46,"contribution_array = np.dot(np.array(value_list), np.array(weight_list))"
483,pιт a pιnĸy,오후 5:46,standard = 100 / len(dict_name)
484,pιт a pιnĸy,오후 5:46,"return float(contribution_array), standard"
485,pιт a pιnĸy,오후 5:46,# >>> wordcloud 만들기
486,pιт a pιnĸy,오후 5:46,def create_noun_tags(data):
487,pιт a pιnĸy,오후 5:46,"text = """""
488,pιт a pιnĸy,오후 5:46,"for word in data[""word""]:"
489,pιт a pιnĸy,오후 5:46,text += word
490,pιт a pιnĸy,오후 5:46,noun_list = Okt().nouns(text)
491,pιт a pιnĸy,오후 5:46,"delete_word = [""이"", ""그"", ""데"", ""음"", ""저"", ""제"", ""의"", ""좀"", ""거"", ""것""]"
492,pιт a pιnĸy,오후 5:46,clean_noun_list = [noun for noun in noun_list if noun not in delete_word]
493,pιт a pιnĸy,오후 5:46,counts = Counter(clean_noun_list)
494,pιт a pιnĸy,오후 5:46,tags = counts.most_common(60)
495,pιт a pιnĸy,오후 5:46,return tags
496,pιт a pιnĸy,오후 5:46,"def create_wordcloud(filename, user_name, idx):"
497,pιт a pιnĸy,오후 5:46,"data = pd.read_csv(f""data/{filename}_result.csv"")"
498,pιт a pιnĸy,오후 5:46,"data.name = data[""name""].str.strip()"
499,pιт a pιnĸy,오후 5:46,user = user_name
500,pιт a pιnĸy,오후 5:46,df_nameWord = data.loc[data.name == user]
501,pιт a pιnĸy,오후 5:46,"df_nameWord = df_nameWord[df_nameWord[""value""].isin([idx])]"
502,pιт a pιnĸy,오후 5:46,"font_path = ""font/KOTRA_BOLD.otf"""
503,pιт a pιnĸy,오후 5:46,tags = create_noun_tags(df_nameWord)
504,pιт a pιnĸy,오후 5:46,"cloud = WordCloud(height=800, width=800,"
505,pιт a pιnĸy,오후 5:46,"font_path=font_path,"
506,pιт a pιnĸy,오후 5:46,"background_color=""white"")"
507,pιт a pιnĸy,오후 5:46,cloud = cloud.generate_from_frequencies(dict(tags))
508,pιт a pιnĸy,오후 5:46,"cloud.to_file(f""media/{filename}_value{idx}.jpg"")"
509,pιт a pιnĸy,오후 5:46,# >>> 함수 돌리기
510,pιт a pιnĸy,오후 5:46,create_csv(FILE_NAME)  # txt 파일 csv 변환
511,pιт a pιnĸy,오후 5:46,predict(FILE_NAME)  # 머신러닝으로 예측 (결과 파일: FILE_NAME_result.csv)
512,pιт a pιnĸy,오후 5:46,value0 = get_result(0)  # 사람별 참여성 비율
513,pιт a pιnĸy,오후 5:46,value1 = get_result(1)  # 사람별 창의성 비율
514,pιт a pιnĸy,오후 5:46,"value_name = get_result(""name"")  # 사람별 성실성 비율"
515,pιт a pιnĸy,오후 5:46,"contribution, standard = get_contribution(USER_NAME, [0.3, 0.3, 0.4])  # 최종 기여도 점수, 기준"
516,pιт a pιnĸy,오후 5:46,"# 워드클라우드 참여성, 창의성, 기타"
517,pιт a pιnĸy,오후 5:46,for i in range(3):
518,pιт a pιnĸy,오후 5:46,"create_wordcloud(FILE_NAME, USER_NAME, i)"
519,pιт a pιnĸy,오후 5:46,파일: total.py
520,pιт a pιnĸy,오후 5:48,[total.py]
521,pιт a pιnĸy,오후 5:48,1. 머신러닝 모델 만들기
522,pιт a pιnĸy,오후 5:48,2. csv 변환 함수 만들기
523,pιт a pιnĸy,오후 5:48,3. 머신러닝 예측 함수 만들기
524,pιт a pιnĸy,오후 5:48,4. 예측값 비율+최종 기여도 함수 만들기
525,pιт a pιnĸy,오후 5:48,5. 워드클라우드 함수 만들기
526,pιт a pιnĸy,오후 5:48,>>> 위에 함수 돌리기!
527,pιт a pιnĸy,오후 5:48,6. txt 파일 csv로 변환하기
528,pιт a pιnĸy,오후 5:48,7. 머신러닝으로 예측하기
529,pιт a pιnĸy,오후 5:48,8. 예측값 각 분야별로 비율 뽑아내기
530,pιт a pιnĸy,오후 5:48,9. 최종 기여도 점수 뽑아내기
531,pιт a pιnĸy,오후 5:48,10. 분야별로 워드클라우드 만들기
532,pιт a pιnĸy,오후 5:49,파일: converter.py
533,pιт a pιnĸy,오후 5:49,파일: LSTM.py
534,pιт a pιnĸy,오후 5:49,파일: ratio.py
535,pιт a pιnĸy,오후 5:49,파일: cloud.py
536,pιт a pιnĸy,오후 5:50,1. [converter.py] txt 파일을 csv로 변환
537,pιт a pιnĸy,오후 5:50,2. [LSTM.py] 머신러닝 모델+학습+예측
538,pιт a pιnĸy,오후 5:50,3. [ratio.py] 분야별 비율+최종 기여도 점수
539,pιт a pιnĸy,오후 5:50,4. [cloud.py] wordcloud
540,pιт a pιnĸy,오후 5:52,"밑에 4개를 total 에 다 순서 맞게 재배치해둔 거라, total만 확인하셔도 괜찮습니당! 아래 4개도 혹시 카카오톡 채팅 형태로 필요하시면 말씀해주세요"
541,pιт a pιnĸy,오후 5:52,"그리고 세리님은 모듈 import 하실 때 어떤 게 경고?오류?가 뜬다고 하시는데, 혹시 돌려보시고 안 되시면 말씀해주세요ㅠ"
542,김예림,오후 6:07,넵넵 수고하셨습니다!!
543,나동민,오후 6:10,저희 회의
544,나동민,오후 6:10,7시죠??
545,김예림,오후 6:11,네 맞습니다!
546,나동민,오후 6:11,아 6시인줄알고 깜짝놀랐네요
547,나동민,오후 6:11,알겠습니다~
548,김예림,오후 6:54,https://sookmyung-ac-kr.zoom.us/j/82823079418?pwd=Z3JNRlNTcUxyZnN4bFV1cjlBWERDUT09
549,김예림,오후 6:54,여기로 들어오시면 됩니다~!
550,엄세리,오후 6:54,저 마이크가 안되서 채팅으로 할께요...!ㅠㅠㅠ
551,김예림,오후 6:55,넵!!
552,엄세리,오후 6:55,카메라 혹시 8시쯤 켜도 괜찮을까요..?!
553,엄세리,오후 6:56,제가 아직 밖이라ㅠㅠㅠㅜ
554,김예림,오후 6:57,넵넵!
555,pιт a pιnĸy,오후 6:58,조 죄송한데 5분 정도만 늦게 들어가야 할 것 같아요 죄송합니다ㅠㅠㅠ
556,김예림,오후 7:00,넵 알겠습니다!!
557,pιт a pιnĸy,오후 7:00,앗 아니에요 안 늦어요
558,pιт a pιnĸy,오후 7:00,ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
559,김예림,오후 7:02,@나동민 동민님 들어와주세요!
560,pιт a pιnĸy,오후 7:16,파일: text.cs
